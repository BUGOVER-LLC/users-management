stages:
  # - test
  - build
  - deploy


# sonarqube-check:
#   stage: test
#   image:
#     name: sonarsource/sonar-scanner-cli:latest
#     entrypoint: [""]
#   variables:
#     SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
#     GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
#   cache:
#     key: "${CI_JOB_NAME}"
#     paths:
#       - .sonar/cache
#   script:
#     - sonar-scanner
#   allow_failure: true


docker-build:
  stage: build
  # Use the official docker image.
  image: docker:cli
  services:
    - docker:18.09-dind
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # All branches are tagged with $DOCKER_IMAGE_NAME (defaults to commit ref slug)
  # Default branch is also tagged with `latest`
  script:
    - docker build --pull --load -t "$DOCKER_IMAGE_NAME" .
    - docker push "$DOCKER_IMAGE_NAME"
    - echo "PUSH IMAGE from branch $CI_COMMIT_BRANCH"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "main" ]]; then
        docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:latest"
        docker push "$CI_REGISTRY_IMAGE:latest"
      fi
  # Run this job in a branch where a Dockerfile exists
  only:
    - test
    - develop

deploy-dev:
  image: docker:cli
  stage: deploy
  services:
    - docker:18.09-dind
  variables:
    NAMESPACE: asd-dev
    DEPLOYMENT: auth
  script:
    - docker run -e NAMESPACE=${NAMESPACE} -e DEPLOYMENT=${DEPLOYMENT} -e KUBECONF_HASH=${KUBECONF_HASH} gitlab.asd.am:5050/asd/cd:main
  only:
    - develop